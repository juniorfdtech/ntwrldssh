#!/bin/bash

scor='\033[0m'
cor1='\033[1;37m'
cor2='\033[1;31m'
cor3='\033[1;32m'
cor4='\033[1;36m'
cor5='\033[1;34m'
cor6='\033[1;35m'
cortxt='\033[1;33m'
corbar1='\033[41;1;37m'
corbar2='\033[44;1;37m'

fun_bar() {
	comando[0]="$1"
	comando[1]="$2"
	(
		[[ -e $HOME/fim ]] && rm $HOME/fim
		${comando[0]} -y >/dev/null 2>&1
		${comando[1]} -y >/dev/null 2>&1
		touch $HOME/fim
	) >/dev/null 2>&1 &
	tput civis
	echo -ne "     ${cortxt}AGUARDE ${cor1}- ${cortxt}["
	while true; do
		for ((i = 0; i < 18; i++)); do
			echo -ne "${cor2}#"
			sleep 0.1s
		done
		[[ -e $HOME/fim ]] && rm $HOME/fim && break
		echo -e "${cortxt}]"
		sleep 1s
		tput cuu1
		tput dl1
		echo -ne "     ${cortxt}AGUARDE ${cor1}- ${cortxt}["
	done
	echo -e "${cortxt}]${cor1} -${cor3} OK !${cor1}"
	tput cnorm
}
[[ $(grep -wc mlocate /var/lib/dpkg/statoverride) != '0' ]] && sed -i '/mlocate/d' /var/lib/dpkg/statoverride
clear
echo -e "${corbar2}                Otimizar Servidor                ${scor}"
echo ""
echo -e "${cor3}               Atualizando pacotes${scor}"
echo ""
fun_bar 'apt-get update -y' 'apt-get upgrade -y'
echo ""
echo -e "${cor3}      Corrigindo problemas de dependências"
echo""
fun_bar 'apt-get -f install'
echo""
echo -e "${cor3}            Removendo pacotes inúteis"
echo ""
fun_bar 'apt-get autoremove -y' 'apt-get autoclean -y'
echo ""
echo -e "${cor3}        Removendo pacotes com problemas"
echo ""
fun_bar 'apt-get -f remove -y' 'apt-get clean -y'
#Limpar o cache memoria RAM
clear
echo -e "${cor2}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${scor}"
echo ""
MEM1=$(free | awk '/Mem:/ {print int(100*$3/$2)}')
ram1=$(free -h | grep -i mem | awk {'print $2'})
ram2=$(free -h | grep -i mem | awk {'print $4'})
ram3=$(free -h | grep -i mem | awk {'print $3'})
swap1=$(free -h | grep -i swap | awk {'print $2'})
swap2=$(free -h | grep -i swap | awk {'print $4'})
swap3=$(free -h | grep -i swap | awk {'print $3'})
echo -e "${cor2}•${cor3}Memoria RAM${cor2}•${scor}                    ${cor2}•${cor3}Swap${cor2}•${scor}"
echo -e " ${cortxt}Total: ${cor1}$ram1                   ${cortxt}Total: ${cor1}$swap1"
echo -e " ${cortxt}Em Uso: ${cor1}$ram3                  ${cortxt}Em Uso: ${cor1}$swap3"
echo -e " ${cortxt}Livre: ${cor1}$ram2                   ${cortxt}Livre: ${cor1}$swap2${scor}"
echo ""
echo -e "${cor1}Memória ${cor3}RAM ${cor1}Antes da Otimizacao:${cor4}" $MEM1%
echo ""
echo -e "${cor2}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${scor}"
sleep 2
echo ""
fun_limpram() {
	sync
	echo 3 >/proc/sys/vm/drop_caches
	sync && sysctl -w vm.drop_caches=3
	sysctl -w vm.drop_caches=0
	swapoff -a
	swapon -a
	sleep 4
}
function aguarde() {
	sleep 1
	helice() {
		fun_limpram >/dev/null 2>&1 &
		tput civis
		while [ -d /proc/$! ]; do
			for i in / - \\ \|; do
				sleep .1
				echo -ne "\e[1D$i"
			done
		done
		tput cnorm
	}
	echo -ne "${cor1}LIMPANDO MEMORIA ${cor3}RAM ${cor1}e ${cor3}SWAP${cor3}.${cortxt}.${cor2}. ${cortxt}"
	helice
	echo -e "\e[1DOk"
}
aguarde
sleep 1
clear
echo -e "${cor3}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${scor}"
echo ""
MEM2=$(free | awk '/Mem:/ {print int(100*$3/$2)}')
ram1=$(free -h | grep -i mem | awk {'print $2'})
ram2=$(free -h | grep -i mem | awk {'print $4'})
ram3=$(free -h | grep -i mem | awk {'print $3'})
swap1=$(free -h | grep -i swap | awk {'print $2'})
swap2=$(free -h | grep -i swap | awk {'print $4'})
swap3=$(free -h | grep -i swap | awk {'print $3'})
echo -e "${cor2}•${cor3}Memoria RAM${cor2}•${scor}                    ${cor2}•${cor3}Swap${cor2}•${scor}"
echo -e " ${cortxt}Total: ${cor1}$ram1                   ${cortxt}Total: ${cor1}$swap1"
echo -e " ${cortxt}Em Uso: ${cor1}$ram3                  ${cortxt}Em Uso: ${cor1}$swap3"
echo -e " ${cortxt}Livre: ${cor1}$ram2                   ${cortxt}Livre: ${cor1}$swap2${scor}"
echo ""
echo -e "${cor1}Memória ${cor3}RAM ${cor1}após a Otimizacao:${cor4}" $MEM2%
echo ""
echo -e "${cor1}Economia de :${cor2} $(expr $MEM1 - $MEM2)%${scor}"
echo ""
echo -e "${cor3}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${scor}"
