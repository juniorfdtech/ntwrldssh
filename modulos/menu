#!/bin/bash

scor='\033[0m'
cor1='\033[1;37m'
cor2='\033[1;31m'
cor3='\033[1;32m'
cor4='\033[1;36m'
cor5='\033[1;34m'
cor6='\033[1;35m'
cortxt='\033[1;33m'
corbar1='\033[41;1;37m'
corbar2='\033[44;1;37m'

clear
fun_bar() {
comando[0]="$1"
comando[1]="$2"
 (
[[ -e $HOME/fim ]] && rm $HOME/fim
${comando[0]} -y > /dev/null 2>&1
${comando[1]} -y > /dev/null 2>&1
touch $HOME/fim
 ) > /dev/null 2>&1 &
 tput civis
echo -ne "${cortxt}["
while true; do
   for((i=0; i<18; i++)); do
   echo -ne "${cor2}#"
   sleep 0.1s
   done
   [[ -e $HOME/fim ]] && rm $HOME/fim && break
   echo -e "${cortxt}]"
   sleep 1s
   tput cuu1
   tput dl1
   echo -ne "${cortxt}["
done
echo -e "${cortxt}]${cor1} -${cor3} OK !${cor1}"
tput cnorm
}
IP=$(cat /etc/IP)
x="ok"
menu ()
{
velocity () {
aguarde () {
comando[0]="$1"
comando[1]="$2"
 (
[[ -e $HOME/fim ]] && rm $HOME/fim
${comando[0]} > /dev/null 2>&1
${comando[1]} > /dev/null 2>&1
touch $HOME/fim
 ) > /dev/null 2>&1 &
 tput civis
echo -ne "  ${cortxt}AGUARDE ${cor1}- ${cortxt}["
while true; do
   for((i=0; i<18; i++)); do
   echo -ne "${cor2}#"
   sleep 0.1s
   done
   [[ -e $HOME/fim ]] && rm $HOME/fim && break
   echo -e "${cortxt}]"
   sleep 1s
   tput cuu1
   tput dl1
   echo -ne "  ${cortxt}AGUARDE ${cor1}- ${cortxt}["
done
echo -e "${cortxt}]${cor1} -${cor3} OK !${cor1}"
tput cnorm
}
fun_tst () {
speedtest --share > speed
}
echo ""
echo -e "\033[0;34m--------------------------------------------------------------${scor}"
echo -e "${corbar2}            üöÄ TESTE DE VELOCIDADE DO SERVIDOR üöÄ             ${scor}"
echo -e "\033[0;34m--------------------------------------------------------------${scor}"
echo ""
aguarde 'fun_tst'
echo ""
png=$(cat speed | sed -n '5 p' |awk -F : {'print $NF'})
down=$(cat speed | sed -n '7 p' |awk -F :  {'print $NF'})
upl=$(cat speed | sed -n '9 p' |awk -F :  {'print $NF'})
lnk=$(cat speed | sed -n '10 p' |awk {'print $NF'})
echo -e "\033[0;34m--------------------------------------------------------------${scor}"
echo -e "${cor3}PING (LATENCIA):${cor1}$png"
echo -e "${cor3}DOWNLOAD:${cor1}$down"
echo -e "${cor3}UPLOAD:${cor1}$upl"
echo -e "${cor3}LINK: ${cor4}$lnk${scor}"
echo -e "\033[0;34m--------------------------------------------------------------${scor}"
rm -rf $HOME/speed
}
#limiter
function limit1 () {
   clear
   echo -e "\n${cor3}INICIANDO O LIMITER... ${scor}"
   echo ""
   fun_bar 'screen -dmS limiter limiter' 'sleep 3'
   [[ $(grep -wc "limiter" /etc/autostart) = '0' ]] && {
       echo -e "ps x | grep 'limiter' | grep -v 'grep' && echo 'ON' || screen -dmS limiter limiter" >> /etc/autostart
   } || {
       sed -i '/limiter/d' /etc/autostart
	   echo -e "ps x | grep 'limiter' | grep -v 'grep' && echo 'ON' || screen -dmS limiter limiter" >> /etc/autostart
   }
   echo -e "\n${cor3}  LIMITER ATIVO !${scor}"
   sleep 3
   menu
}
function limit2 () {
   clear
   echo -e "${cor3}PARANDO O LIMITER... ${scor}"
   echo ""
   fun_stplimiter () {
      sleep 1
      screen -r -S "limiter" -X quit
      screen -wipe 1>/dev/null 2>/dev/null
      [[ $(grep -wc "limiter" /etc/autostart) != '0' ]] && {
          sed -i '/limiter/d' /etc/autostart
      }
      sleep 1
   }
   fun_bar 'fun_stplimiter' 'sleep 3'
   echo -e "\n${cor2} LIMITER PARADO !${scor}"
   sleep 3
   menu
}
function limit_ssh () {
[[ $(ps x | grep "limiter"|grep -v grep |wc -l) = '0' ]] && limit1 || limit2
}

function autoexec () {
   if grep "menu;" /etc/profile > /dev/null; then
      clear
      echo -e "${cor3}DESATIVANDO AUTO EXECU√á√ÉO${scor}"
      offautmenu () {
         sed -i '/menu;/d' /etc/profile
      }
      echo ""
      fun_bar 'offautmenu'
      echo ""
      echo -e "${cor2}AUTO EXECU√á√ÉO DESATIVADO!${scor}"
      sleep 1.5s
      menu2
   else
      clear
      echo -e "${cor3}ATIVANDO AUTO EXECU√á√ÉO${scor}"
      autmenu () {
         grep -v "^menu;" /etc/profile > /tmp/tmpass && mv /tmp/tmpass /etc/profile
         echo "menu;" >> /etc/profile
      }
      echo ""
      fun_bar 'autmenu'
      echo ""
      echo -e "${cor3}AUTO EXECU√á√ÉO ATIVADO!${scor}"
      sleep 1.5s
      menu2
   fi

}
#menu2
menu2 (){
[[ -e /etc/Plus-torrent ]] && stsf=$(echo -e "${cor3}ON ") || stsf=$(echo -e "${cor2}OFF")
stsbot=$(ps x | grep "bot_plus"|grep -v grep > /dev/null && echo -e "${cor3}ON " || echo -e "${cor2}OFF")
stsl=$(ps x | grep "limiter"|grep -v grep > /dev/null && echo -e "${cor3}ON" || echo -e "${cor2}OFF")
stsu=$(ps x | grep "udpvpn"|grep -v grep > /dev/null && echo -e "${cor3}ON " || echo -e "${cor2}OFF")
stsom=$(ps x | grep "shutdown -r 16:00"|grep -v grep > /dev/null && echo -e "${cor3}ON" || echo -e "${cor2}OFF")
autm=$(grep "menu;" /etc/profile > /dev/null && echo -e "${cor3}ON " || echo -e "${cor2}OFF")
if [[ "$(grep -c "Ubuntu" /etc/issue.net)" = "1" ]]; then
system=$(cut -d' ' -f1 /etc/issue.net)
system+=$(echo ' ')
system+=$(cut -d' ' -f2 /etc/issue.net |awk -F "." '{print $1}')
elif [[ "$(grep -c "Debian" /etc/issue.net)" = "1" ]]; then
system=$(cut -d' ' -f1 /etc/issue.net)
system+=$(echo ' ')
system+=$(cut -d' ' -f3 /etc/issue.net)
else
system=$(cut -d' ' -f1 /etc/issue.net)
fi
_ons=$(ps -x | grep sshd | grep -v root | grep priv | wc -l)
[[ "$(cat /etc/SSHPlus/Exp)" != "" ]] && _expuser=$(cat /etc/SSHPlus/Exp) || _expuser="0"
[[ -e /etc/openvpn/openvpn-status.log ]] && _onop=$(grep -c "10.8.0" /etc/openvpn/openvpn-status.log) || _onop="0"
[[ -e /etc/default/dropbear ]] && _drp=$(ps aux | grep dropbear | grep -v grep | wc -l) _ondrp=$(($_drp - 1)) || _ondrp="0"
_onli=$(($_ons + $_onop + $_ondrp))
_ram=$(printf ' %-9s' "$(free -h | grep -i mem | awk {'print $2'})")
_usor=$(printf '%-8s' "$(free -m | awk 'NR==2{printf "%.2f%%", $3*100/$2 }')")
_usop=$(printf '%-1s' "$(top -bn1 | awk '/Cpu/ { cpu = "" 100 - $8 "%" }; END { print cpu }')")
_core=$(printf '%-1s' "$(grep -c cpu[0-9] /proc/stat)")
_system=$(printf '%-14s' "$system")
_hora=$(printf '%(%H:%M:%S)T')
_onlin=$(printf '%-5s' "$_onli")
_userexp=$(printf '%-5s' "$_expuser")
_tuser=$(awk -F: '$3>=1000 {print $1}' /etc/passwd | grep -v nobody | wc -l)
_diskText=$(df -h | awk '$NF=="/"{printf "%d/%dGB + (%s)\n", $3,$2,$5}')
_swap1=$(free -h | grep -i swap | awk {'print $2'})
_swap4=$(free | awk '/Swap/{printf("%.1f%"), $3/($2+.000000001)*100}';)
clear
echo -e "\033[0;34m--------------------------------------------------------------${scor}"
echo -e "${corbar2}                  ‚öí NET WORLD SSH MANAGEMENT ‚öí                ${scor}"
echo -e "\033[0;34m--------------------------------------------------------------${scor}"
echo -e "${cor3}SISTEMA              | MEM√ìRIA RAM           | PROCESSADOR "
echo -e "${cor2}OS: ${cor1}$_system   | ${cor2}TOTAL:${cor1}$_ram      | ${cor2}NUCLEO: ${cor1}$_core${scor}"
echo -e "${cor2}HOR√ÅRIO: ${cor1}$_hora    | ${cor2}EM USO: ${cor1}$_usor      | ${cor2}EM USO: ${cor1}$_usop${scor}"
echo -e "${cor4}UDP FAST${cor1} $stsu ${cor1}        | ${cor4}BOT TELEGRAM $stsbot ${cor1}     | ${cor1}${cor4}LIMITER${cor1} $stsl"
[[ ! -e /tmp/att ]]  && {
    echo -e "${cor3}ONLINES:${cor1} $_onlin       | ${cor2}EXPIRADOS: ${cor1}$_userexp      | ${cortxt}TOTAL: ${cor1}$_tuser${scor}"
    var01='${cor1}‚Ä¢'
} || {
    echo -e ""
    var01="${cor3}!"
}
echo -e "\033[0;34m--------------------------------------------------------------${scor}"
echo -e "${cor3}SWAP INSTALADO:${cor1} $_swap1     ${cor3}ESPA√áO TOTAL: ${cor1}$_diskText"
echo -e "\033[0;34m--------------------------------------------------------------${scor}"
echo -e "${cor2}[${cor4}22${cor2}] ${cor5}‚óâ ${cortxt}AUTO REBOOT       ${cor2}          [${cor4}28${cor2}] ${cor5}‚óâ ${cortxt}AUTO EXECUCAO $autm ${cor2}
[${cor4}23${cor2}] ${cor5}‚óâ ${cortxt}REINICIAR SERVI√áOS ${cor2}         [${cor4}29${cor2}] ${cor5}‚óâ ${cortxt}BLOCK SITE ${cor2}
[${cor4}24${cor2}] ${cor5}‚óâ ${cortxt}BLOCK TORRENT $stsf${cor2}           [${cor4}30${cor2}] ${cor5}‚óâ ${cortxt}MUDAR SENHA ROOT ${cor2}
[${cor4}25${cor2}] ${cor5}‚óâ ${cortxt}BOT TELEGRAM $stsbot${cor2}            [${cor4}31${cor2}] ${cor5}‚óâ ${cortxt}REMOVER SCRIPT ${cor2}
[${cor4}26${cor2}] ${cor5}‚óâ ${cortxt}MEMORY SWAP${cor2}                 [${cor4}00${cor2}] ${cor5}‚óâ ${cortxt}VOLTAR ${cor3}<${cortxt}<${cor2}< ${cor2}
[${cor4}27${cor2}] ${cor5}‚óâ ${cortxt}TCPTWEAKER       ${cor2}"           
echo -e "\033[0;34m--------------------------------------------------------------${scor}"
echo -ne "${cor3}OQUE DESEJA FAZER ${cortxt}?${cor2}?${cor1} : "; read x
case "$x" in
   22)
   clear
   reboot_sys
   ;;
   23)
   clear
   reiniciarservicos
   sleep 3
   ;;
   24)
   blockt
   ;;
   25)
   botssh
   ;;
   26)
   swapmemory
   ;;
   27)
   clear
   tcptweaker.sh 
   ;;
   28)
   autoexec
   ;;
   29)
   blocksite
   ;;
   30)
   senharoot
   sleep 3
   ;;
   31)
   clear
   delscript
   ;;
    0|00)
   echo -e "${cor2}Voltando ao MENU...${scor}"
   sleep 1s
   clear
   menu;
   ;;
   *)
   echo -e "\n${cor2}Opcao invalida !${scor}"
   sleep 2
esac
}
while true $x != "ok"
do
stsl=$(ps x | grep "limiter"|grep -v grep > /dev/null && echo -e "${cor3}ON " || echo -e "${cor2}OFF ")
stson=$(ps x | grep "onlineapp"|grep -v grep > /dev/null && echo -e "${cor3}ON " || echo -e "${cor2}OFF ")
stsu=$(ps x | grep "udpvpn"|grep -v grep > /dev/null && echo -e "${cor3}ON " || echo -e "${cor2}OFF ")
if [[ "$(grep -c "Ubuntu" /etc/issue.net)" = "1" ]]; then
system=$(cut -d' ' -f1 /etc/issue.net)
system+=$(echo ' ')
system+=$(cut -d' ' -f2 /etc/issue.net |awk -F "." '{print $1}')
elif [[ "$(grep -c "Debian" /etc/issue.net)" = "1" ]]; then
system=$(cut -d' ' -f1 /etc/issue.net)
system+=$(echo ' ')
system+=$(cut -d' ' -f3 /etc/issue.net)
else
system=$(cut -d' ' -f1 /etc/issue.net)
fi
_ons=$(ps -x | grep sshd | grep -v root | grep priv | wc -l)
[[ "$(cat /etc/SSHPlus/Exp)" != "" ]] && _expuser=$(cat /etc/SSHPlus/Exp) || _expuser="0"
[[ -e /etc/openvpn/openvpn-status.log ]] && _onop=$(grep -c "10.8.0" /etc/openvpn/openvpn-status.log) || _onop="0"
[[ -e /etc/default/dropbear ]] && _drp=$(ps aux | grep dropbear | grep -v grep | wc -l) _ondrp=$(($_drp - 1)) || _ondrp="0"
_onli=$(($_ons + $_onop + $_ondrp))
_ram=$(printf ' %-9s' "$(free -h | grep -i mem | awk {'print $2'})")
_usor=$(printf '%-8s' "$(free -m | awk 'NR==2{printf "%.2f%%", $3*100/$2 }')")
_usop=$(printf '%-1s' "$(top -bn1 | awk '/Cpu/ { cpu = "" 100 - $8 "%" }; END { print cpu }')")
_core=$(printf '%-1s' "$(grep -c cpu[0-9] /proc/stat)")
_system=$(printf '%-14s' "$system")
_hora=$(printf '%(%H:%M:%S)T')
_onlin=$(printf '%-5s' "$_onli")
_userexp=$(printf '%-5s' "$_expuser")
_tuser=$(awk -F: '$3>=1000 {print $1}' /etc/passwd | grep -v nobody | wc -l)
_diskText=$(df -h | awk '$NF=="/"{printf "%d/%dGB + (%s)\n", $3,$2,$5}')
_swap1=$(free -h | grep -i swap | awk {'print $2'})
_swap4=$(free | awk '/Swap/{printf("%.1f%"), $3/($2+.000000001)*100}';)
[[ -e /etc/Plus-torrent ]] && stsf=$(echo -e "${cor3}ON ") || stsf=$(echo -e "${cor2}OFF")
stsbot=$(ps x | grep "bot_plus"|grep -v grep > /dev/null && echo -e "${cor3}ON " || echo -e "${cor2}OFF")
stsbotteste=$(ps x | grep "bot_teste"|grep -v grep > /dev/null && echo -e "${cor3}ON" || echo -e "${cor2}OFF")
stsl=$(ps x | grep "limiter"|grep -v grep > /dev/null && echo -e "${cor3}ON" || echo -e "${cor2}OFF")
stsu=$(ps x | grep "udpvpn"|grep -v grep > /dev/null && echo -e "${cor3}ON " || echo -e "${cor2}OFF")
stsom=$(ps x | grep "shutdown -r 16:00"|grep -v grep > /dev/null && echo -e "${cor3}ON " || echo -e "${cor2}OFF")
autm=$(grep "menu;" /etc/profile > /dev/null && echo -e "${cor3}ON" || echo -e "${cor2}OFF")
clear
echo -e "\033[0;34m--------------------------------------------------------------${scor}"
echo -e "${corbar2}                  ‚öí NET WORLD SSH MANAGEMENT ‚öí                ${scor}"
echo -e "\033[0;34m--------------------------------------------------------------${scor}"
echo -e "${cor3}SISTEMA              | MEM√ìRIA RAM           | PROCESSADOR "
echo -e "${cor2}OS: ${cor1}$_system   | ${cor2}TOTAL:${cor1}$_ram      | ${cor2}NUCLEO: ${cor1}$_core${scor}"
echo -e "${cor2}HOR√ÅRIO: ${cor1}$_hora    | ${cor2}EM USO: ${cor1}$_usor      | ${cor2}EM USO: ${cor1}$_usop${scor}"
echo -e "${cor4}UDP FAST${cor1} $stsu ${cor1}        | ${cor4}BOT TELEGRAM $stsbot ${cor1}     | ${cor1}${cor4}LIMITER${cor1} $stsl"
echo -e "${cor3}ONLINES:${cor1} $_onlin       | ${cor2}EXPIRADOS: ${cor1}$_userexp      | ${cortxt}TOTAL: ${cor1}$_tuser${scor}"
echo -e "\033[0;34m--------------------------------------------------------------${scor}"
echo -e "${cor3}SWAP INSTALADO:${cor1} $_swap1     ${cor3}ESPA√áO TOTAL: ${cor1}$_diskText"
echo -e "\033[0;34m--------------------------------------------------------------${scor}"
echo -e "${cor2}[${cor4}01${cor2}] ${cor5}‚óâ ${cortxt}CRIAR LOGIN ${cor2}                 [${cor4}12${cor2}] ${cor5}‚óâ ${cortxt}SPEEDTEST ${cor2}
[${cor4}02${cor2}] ${cor5}‚óâ ${cortxt}CRIAR TESTE ${cor2}                 [${cor4}13${cor2}] ${cor5}‚óâ ${cortxt}BANNER ${cor2}
[${cor4}03${cor2}] ${cor1}${cor5}‚óâ ${cortxt}REMOVER LOGIN ${cor2}               [${cor4}14${cor2}] ${cor5}‚óâ ${cortxt}TRAFEGO ${cor2}
[${cor4}04${cor2}] ${cor5}‚óâ ${cortxt}USUARIOS ONLINE ${cor2}             [${cor4}15${cor2}] ${cor5}‚óâ ${cortxt}OTIMIZAR ${cor2}
[${cor4}05${cor2}] ${cor5}‚óâ ${cortxt}MUDAR DATA ${cor2}                  [${cor4}16${cor2}] ${cor5}‚óâ ${cortxt}BACKUP ${cor2}
[${cor4}06${cor2}] ${cor5}‚óâ ${cortxt}ALTERAR LIMITE ${cor2}              [${cor4}17${cor2}] ${cor5}‚óâ ${cortxt}LIMITER $stsl${cor2}
[${cor4}07${cor2}] ${cor5}‚óâ ${cortxt}MUDAR SENHA ${cor2}                 [${cor4}18${cor2}] ${cor5}‚óâ ${cortxt}UDP FAST $stsu${cor2}
[${cor4}08${cor2}] ${cor5}‚óâ ${cortxt}REMOVER EXPIRADOS ${cor2}           [${cor4}19${cor2}] ${cor5}‚óâ ${cortxt}INFO VPS ${cor2}
[${cor4}09${cor2}] ${cor5}‚óâ ${cortxt}RELATORIO DE USUARIOS ${cor2}       [${cor4}20${cor2}] ${cor5}‚óâ ${cortxt}EXTRA${cor2} 
[${cor4}10${cor2}] ${cor5}‚óâ ${cortxt}MODO DE CONEX√ÉO ${cor2}             [${cor4}21${cor2}] ${cor5}‚óâ ${cortxt}MAIS ${cor2}>${cortxt}>${cor3}>${scor}${cor2}
[${cor4}11${cor2}] ${cor5}‚óâ ${cortxt}SUSPENDER USUARIO ${cor2}           [${cor4}00${cor2}] ${cor5}‚óâ ${cortxt}SAIR ${cor3}<${cortxt}<${cor2}<${scor} ${scor}"
echo -e "\033[0;34m--------------------------------------------------------------${scor}"
echo -ne "${cor3}OQUE DESEJA FAZER ${cortxt}?${cor2}?${cor1} : "; read x

case "$x" in 
   1 | 01)
   clear
   criarusuario
   echo -ne "\n${cor2}ENTER ${cortxt}para retornar ao ${cor3}MENU!${scor}"; read
   ;;
   2 | 02)
   clear
   criarteste
   echo -ne "\n${cor2}ENTER ${cortxt}para retornar ao ${cor3}MENU!${scor}"; read
   ;;
   3 | 03)
   clear
   remover
   sleep 3
   ;;
   4 | 04)
   clear
   sshmonitor
   echo -ne "\n${cor2}ENTER ${cortxt}para retornar ao ${cor3}MENU!${scor}"; read
   ;;      
   5 | 05)
   clear
   mudardata
   sleep 3
   ;;
   6 | 06)
   clear
   alterarlimite
   sleep 3
   ;; 
   7 | 07)
   clear
   alterarsenha
   sleep 3
   ;;
   8 | 08)
   clear
   expcleaner
   echo ""
   sleep 3
   ;;     
   9 | 09)
   clear
   infousers
   echo -ne "\n${cor2}ENTER ${cortxt}para retornar ao ${cor3}MENU!${scor}"; read
   ;;
   10)
   conexao
   exit;
   ;;
   11)
   blockuser
   ;;
   12)
   clear
   velocity
   echo -ne "\n${cor2}ENTER ${cortxt}para retornar ao ${cor3}MENU!${scor}"; read
   ;;
   13)
   clear
   banner
   sleep 3
   ;;
   14)
   clear
   echo -e "${cor3}PARA SAIR CLICK CTRL + C${cor4}"
   sleep 4
   nload
   ;;
   15)
   clear
   otimizar
   echo -ne "\n${cor2}ENTER ${cortxt}para retornar ao ${cor3}MENU!${scor}"; read
   ;;
   16)
   userbackup
   echo -ne "\n${cor2}ENTER ${cortxt}para retornar ao ${cor3}MENU!${scor}"; read
   ;;
   17)
   limit_ssh
   ;;
   18)
   clear
   badvpn
   exit;
   ;;
   19)
   clear
   detalhes
   echo -ne "\n${cor2}ENTER ${cortxt}para retornar ao ${cor3}MENU!${scor}"; read
   clear
   sleep 1s
   menu
   ;;
   20)
   multi
   ;;
   21)
   clear
   menu2
   ;;
   0 | 00)
   echo -e "${cor2}Saindo...${scor}"
   sleep 2s
   clear
   exit
   ;;
   *)
   echo -e "\n${cor2}Opcao invalida !${scor}"
   sleep 2
esac
done
}
menu
#fim
